- content_for :head do
  :javascript
    $(document).ready(function() {
      $('#javascript_disabled').remove();

      checkboxTogglesSet($('#state_registrants_pa_registrant_change_of_name'), $('#prev_name_set'), $('#prev_name_rule'));
      
      function toggleSsn() {
        if ($("#state_registrants_va_registrant_confirm_no_ssn:checked").length > 0 ) {
          $(".registrant-form__ssn__line, #dln-set").hide();
        } else {
          $(".registrant-form__ssn__line, #dln-set").show();
        }
      }        
      $("#state_registrants_va_registrant_confirm_no_ssn").click(toggleSsn)
      toggleSsn();      

      function toggleDlnn() {
        if ($("#state_registrants_va_registrant_confirm_no_dln:checked").length > 0 ) {
          $(".registrant-form__dln__line").hide();
        } else {
          $(".registrant-form__dln__line").show();
        }
      }        
      $("#state_registrants_va_registrant_confirm_no_dln").click(toggleDlnn)
      toggleDlnn();      
      
      function toggleRightToVoteRestored() {
        if ($("#state_registrants_va_registrant_convicted_of_felony_true:checked").length > 0 ) {
          $(".right-to-vote-restored").show();
        } else {
          $(".right-to-vote-restored").hide();
        }
      }
      $("#state_registrants_va_registrant_convicted_of_felony_true, #state_registrants_va_registrant_convicted_of_felony_false").click(toggleRightToVoteRestored)
      toggleRightToVoteRestored();
          
      
      function toggleMailingAddress() {
        if ($(".registrant-form__is-military__line input:checked, .registrant-form__no-usps-address__line input:checked, .registrant-form__is-court-protected__line input:checked, .registrant-form__is-law-enforcement__line input:checked, .registrant-form__is-confidentiality-program__line input:checked, .registrant-form__is-being-stalked__line input:checked ").length > 0 ) {
          $(".mailing-address-set").show();
        } else {
          $(".mailing-address-set").hide();          
        }            
      }
      $(".registrant-form__is-military__line input, .registrant-form__no-usps-address__line input, .registrant-form__is-court-protected__line input, .registrant-form__is-law-enforcement__line input, .registrant-form__is-confidentiality-program__line input, .registrant-form__is-being-stalked__line input").click(toggleMailingAddress)
      toggleMailingAddress();
          
      function toggleOtherStateReg() {
        if ($("#state_registrants_va_registrant_registered_in_other_state:checked").length > 0) {
          $(".registrant-form__other-registration-state-abbrev__line").show();
        } else {
          $(".registrant-form__other-registration-state-abbrev__line").hide();            
        }
      }
      $("#state_registrants_va_registrant_registered_in_other_state").click(toggleOtherStateReg);
      toggleOtherStateReg()
          
    });
    
= form_for(@registrant, url: update_state_registrant_path(controller.current_state, @registrant.to_param)) do |form|
  = render partial: 'state_registrants/locale_selector', locals: {form: form }
  = render partial: 'state_registrants/va/header'
  
  = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_voter_record_update, class_name: "registrant-form__confirm_voter_record_update__line", required: true}
  
  = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_us_citizen, class_name: "registrant-form__us-citizen__line", required: true}
  
  %fieldset#ssn_set
    %ul.flat.ssn
      = field_li(form, :ssn, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__ssn__line"}, field_options: {type: :password} })
      
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_no_ssn, class_name: "registrant-form__no-ssn__line", required: false}
  %fieldset#dln-set
    %ul.flat.dln
      = field_li(form, :dln, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__dln__line"} })
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :confirm_no_dln, class_name: "registrant-form__no-ssn__line", required: false}
      
  %ul.flat
    = field_li(form, :date_of_birth, {required: true, label_options: nil, field_options: {:value => form.object.form_date_of_birth, placeholder: 'MM-DD-YYYY'}, li_options: {class: 'registrant-form__date-of-birth__line'} })
  
  = render partial: 'state_registrants/va/name', locals: {form: form}
    
  %fieldset
    %legend
      %span= I18n.t('txt.registration.home_address') 
      = tooltip_tag :home_address
    %ul.stacked
      = field_li(form, :registration_address_1, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__home-address__line"}})
    %ul.stacked
      = field_li(form, :registration_address_2, {skip_tooltip: true,required: false, li_options: {class: "registrant-form__home-address__line"}})
    %ul.stacked
      = field_li(form, :registration_city, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-city__line"} })
      = field_li(form, :home_state_abbrev, {skip_tooltip: true,required: true, field_options: {disabled: true}, li_options: {class: "registrant-form__home-state-abbrev__line"} })
      = field_li(form, :registration_zip_code, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-zip-code__line"} })
    %ul.stacked
      = field_li(form, :registration_locality, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__county__line"}, select_options: StateRegistrants::VARegistrant.localities.collect {|l| [l["Name"], l["Code"]]}, field_options: {include_blank: true} })
  
  %fieldset
    %ul.stacked
      = field_li(form, :phone, {skip_tooltip: true, required: false, li_options: {class: "registrant-form__email__line"}})
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :opt_in_sms, class_name: "registrant-form__opt-in-sms_line", required: false, field_label: t('txt.registration.opt_in_sms', :organization => h("Rock the Vote")).html_safe}
  
  - if @registrant.email.blank?
    %fieldset
      %ul.stacked
        = field_li(form, :email, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__email__line"}})
  
  %fieldset.no_border
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :opt_in_email, class_name: "registrant-form__opt-in-email_line", required: false, field_label: t('txt.registration.opt_in_email', :organization => h("Rock the Vote")).html_safe}
  
  -# TODO fix "no" and "yes" to be i18n strings
  %fieldset.convicted-of-felony
    %ul.stacked.radio
      = field_li(form, :convicted_of_felony, {skip_tooltip: true, required: true, radio_options: [[t('no'), false], [t('yes'), true]]})

  %fieldset.right-to-vote-restored
    %ul.stacked.radio
      = field_li(form, :right_to_vote_restored, {skip_tooltip: true, required: true, radio_options: [[t("no"), false], [t("yes"), true]]})
  
  %fieldset.voter-classification
    %legend
      %span= I18n.t('states.custom.va.voter_classification') 
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :is_military, class_name: "registrant-form__is-military__line", required: false}
    
  %fieldset.protected-voter
    %legend
      %span= I18n.t('states.custom.va.protected_voter') 
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :is_law_enforcement, class_name: "registrant-form__is-law-enforcement__line", required: false}
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :is_court_protected, class_name: "registrant-form__is-court-protected__line", required: false}
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :is_confidentiality_program, class_name: "registrant-form__is-confidentiality-program__line", required: false}
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :is_being_stalked, class_name: "registrant-form__is-being-stalked__line", required: false}
  
  %fieldset.no-usps
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :no_usps_address, class_name: "registrant-form__no-usps-address__line", required: false}


  %fieldset.mailing-address-set
    %legend
      %span= I18n.t('txt.registration.mailing_address') 
      = tooltip_tag :mailing_address
    %ul.stacked
      = field_li(form, :mailing_address_1, {skip_tooltip: true, required: true, li_options: {class: "registrant-form__home-address__line"}})
    %ul.stacked
      = field_li(form, :mailing_address_2, {skip_tooltip: true,required: false, li_options: {class: "registrant-form__home-address__line"}})
    %ul.stacked
      = field_li(form, :mailing_city, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-city__line"} })
      = field_li(form, :mailing_state, {skip_tooltip: true,required: true, field_options: {}, li_options: {class: "registrant-form__home-state-abbrev__line"}, select_options: GeoState.all.collect {|s| s.abbreviation }, field_options: {include_blank: true}})
      = field_li(form, :mailing_zip_code, {skip_tooltip: true,required: true, li_options: {class: "registrant-form__home-zip-code__line"} })
    %ul.stacked
      = field_li(form, :mailing_address_locality, {skip_tooltip: true,required: false, li_options: {class: "registrant-form__county__line"}, select_options: StateRegistrants::VARegistrant.localities.collect {|l| [l["Name"], l["Code"]]}, field_options: {include_blank: true} })
  
  %fieldset
    %legend
      %span= t('states.custom.va.other_questions')
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :registered_in_other_state, class_name: "registrant-form__registered-in-other-state__line", required: false}
    %ul.stacked
      = field_li(form, :other_registration_state_abbrev, {skip_tooltip: true, required: true, field_options: {}, li_options: {class: "registrant-form__other-registration-state-abbrev__line"}, select_options: GeoState.all.collect {|s| [s.name, s.abbreviation] }, field_options: {include_blank: true}})
    
    = render partial: 'registrants/generic/checkbox', locals: {form: form, field: :interested_in_being_poll_worker, class_name: "registrant-form__interested-in-being-poll-worker__line", required: false}
    


  = rollover_button(:next_step, I18n.t('txt.button.submit').html_safe)  
  .back
    = link_to t('txt.button.back').html_safe, registrant_path(@registrant.registrant)
    
